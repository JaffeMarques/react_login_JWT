[{"C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\index.js":"1","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\App.js":"2","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\routes.js":"3","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\login\\index.js":"4","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\services\\api.js":"5","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\register\\index.js":"6","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\home\\index.js":"7","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\components\\Header.js":"8","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\Login\\index.js":"9","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\Home\\index.js":"10","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\Register\\index.js":"11","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\User\\index.js":"12","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\Recover\\index.js":"13","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\Recover\\newPassword.js":"14"},{"size":193,"mtime":1611726493717,"results":"15","hashOfConfig":"16"},{"size":167,"mtime":1611722616185,"results":"17","hashOfConfig":"16"},{"size":907,"mtime":1611856118772,"results":"18","hashOfConfig":"16"},{"size":1984,"mtime":1611737944681,"results":"19","hashOfConfig":"16"},{"size":130,"mtime":1611875329719,"results":"20","hashOfConfig":"16"},{"size":7250,"mtime":1611802188284,"results":"21","hashOfConfig":"16"},{"size":8323,"mtime":1611767413428,"results":"22","hashOfConfig":"16"},{"size":1566,"mtime":1611922381917,"results":"23","hashOfConfig":"16"},{"size":3023,"mtime":1611859191955,"results":"24","hashOfConfig":"16"},{"size":8134,"mtime":1611865916333,"results":"25","hashOfConfig":"16"},{"size":10449,"mtime":1611930224152,"results":"26","hashOfConfig":"16"},{"size":10410,"mtime":1611859474428,"results":"27","hashOfConfig":"16"},{"size":4151,"mtime":1611855479643,"results":"28","hashOfConfig":"16"},{"size":2957,"mtime":1611852270548,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"h61ouy",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\index.js",[],["64","65"],"C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\App.js",[],"C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\routes.js",[],"C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\login\\index.js",[],["66","67"],"C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\services\\api.js",[],"C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\register\\index.js",[],"C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\home\\index.js",["68"],"import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Header from '../../components/Header';\r\nimport api from '../../services/api';\r\nimport './styles.css';\r\n\r\nexport default function Register() {\r\n    const [results, setResults] = useState('');\r\n    const [search, setSearch] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [month, setMonth] = useState('');\r\n    const [year, setYear] = useState('');\r\n    const [isHide, setIsHide] = useState('hidden');\r\n    const history = useHistory();\r\n\r\n    async function handleSearch(e) {\r\n        //block reload page\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            search,\r\n            day,\r\n            month,\r\n            year\r\n        };\r\n\r\n        try {\r\n            api.post('api/search', data).then(async (res) => {\r\n                setResults(res.data.results);\r\n                setIsHide(null);\r\n            });\r\n        } catch(err) {\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n   \r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <div className=\"home-form\">\r\n                <div className='login-form col-10 offset-1 col-md-4 offset-md-4'>\r\n                    <section className=\"row\">\r\n                        <form className=\"col-12\" onSubmit={handleSearch}>\r\n                        <h2 className=\"cad-title text-center mb-4\">FAÇA UMA BUSCA</h2>\r\n                            <label  className=\"text-white mb-3\">Você pode buscar por nome e/ou profissão</label>\r\n                            <input className=\"col-12\" \r\n                                type=\"text\" \r\n                                placeholder=\"Digite sua busca\" \r\n                                value={search} \r\n                                onChange={ e => setSearch(e.target.value) } />\r\n                            \r\n                            <label  className=\"text-white mb-3\">Filtros por data de nascimento</label>\r\n                            <div className=\"row  pl-3\">\r\n                                <select className=\"custom-select col-3 mr-3\"\r\n                                    value={day} \r\n                                    onChange={ e => setDay(e.target.value) }\r\n                                >\r\n                                    <option value=\"\" selected>Dia</option>\r\n                                    <option value=\"01\">01</option>\r\n                                    <option value=\"02\">02</option>\r\n                                    <option value=\"03\">03</option>\r\n                                    <option value=\"04\">04</option>\r\n                                    <option value=\"05\">05</option>\r\n                                    <option value=\"06\">06</option>\r\n                                    <option value=\"07\">07</option>\r\n                                    <option value=\"08\">08</option>\r\n                                    <option value=\"09\">09</option>\r\n                                    <option value=\"10\">10</option>\r\n                                    <option value=\"11\">11</option>\r\n                                    <option value=\"12\">12</option>\r\n                                    <option value=\"13\">13</option>\r\n                                    <option value=\"14\">14</option>\r\n                                    <option value=\"15\">15</option>\r\n                                    <option value=\"16\">16</option>\r\n                                    <option value=\"17\">17</option>\r\n                                    <option value=\"18\">18</option>\r\n                                    <option value=\"19\">19</option>\r\n                                    <option value=\"20\">20</option>\r\n                                    <option value=\"21\">21</option>\r\n                                    <option value=\"22\">22</option>\r\n                                    <option value=\"23\">23</option>\r\n                                    <option value=\"24\">24</option>\r\n                                    <option value=\"25\">25</option>\r\n                                    <option value=\"26\">26</option>\r\n                                    <option value=\"27\">27</option>\r\n                                    <option value=\"28\">28</option>\r\n                                    <option value=\"29\">29</option>\r\n                                    <option value=\"30\">30</option>\r\n                                    <option value=\"31\">31</option>\r\n                                </select>\r\n                                <select className=\"custom-select col-3 mr-3\"\r\n                                    value={month}\r\n                                    onChange={ e => setMonth(e.target.value) }\r\n                                    >\r\n                                    <option value=\"\" selected>Mês</option>\r\n                                    <option value=\"01\">Jan</option>\r\n                                    <option value=\"02\">Fev</option>\r\n                                    <option value=\"03\">Mar</option>\r\n                                    <option value=\"04\">Abr</option>\r\n                                    <option value=\"05\">Mai</option>\r\n                                    <option value=\"06\">Jun</option>\r\n                                    <option value=\"07\">Jul</option>\r\n                                    <option value=\"08\">Ago</option>\r\n                                    <option value=\"09\">Set</option>\r\n                                    <option value=\"10\">Out</option>\r\n                                    <option value=\"11\">Nov</option>\r\n                                    <option value=\"12\">Dez</option>\r\n                                </select>\r\n                                <input className=\"col-5\" \r\n                                    type=\"text\" \r\n                                    placeholder=\"Informe o ano\" \r\n                                    value={year} \r\n                                    onChange={ e => setYear(e.target.value) } />\r\n                            </div>\r\n                            <div className=\"text-center mt-3\">\r\n                                <button className=\"btn btn-primary\" type=\"submit\">\r\n                                    FAZER BUSCA\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n            <div className={isHide}>\r\n                <div className=\"home-result\" >\r\n                    <div className='login-form col-10 offset-1 col-md-4 offset-md-4'>\r\n                        <section className=\"col-12\">\r\n                            <h4 className=\"cad-title text-center mb-4\">RESULTADOS CORRESPONDENTES</h4>\r\n\r\n                            <div className=\"col-12\">\r\n                            { results.length > 0 ? results.map((result) => \r\n                            (\r\n                                <div className=\"user row text-left mt-3\" key={result.id}>\r\n                                    <h4 className=\"user-name cad-title col-12\">{result.name}</h4>\r\n                                    <div className=\"user-name small col-12\">{result.born_date} | {result.cpf} | {result.career}</div> \r\n                                    <div className=\"user-name small col-12\">Seu pet é: {result.pet}</div> \r\n                                    <div className=\"user-edit mt-1 col-12\">\r\n                                        <Link className=\"default-link default-link\" to=\"/profile\">\r\n                                            Ver perfil\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            )) : (\r\n                                <div className=\"\">\r\n                                    <p className=\"text-center small\">\r\n                                        Não encontramos nenhum registro correspondente :/<br/>\r\n                                        Tente fazer uma nova busca\r\n                                    </p>\r\n                                </div>\r\n                            ) }\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n      );\r\n    }","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\components\\Header.js",[],"C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\Login\\index.js",[],"C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\Home\\index.js",[],"C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\Register\\index.js",["69"],"C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\User\\index.js",["70"],"import React, { Component } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from '../../components/Header';\r\nimport api from '../../services/api';\r\nimport './styles.css';\r\n\r\nexport default class EditUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangeCareer = this.onChangeCareer.bind(this);\r\n        this.onChangeCpf = this.onChangeCpf.bind(this);\r\n        this.onChangePet = this.onChangePet.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onChangePasswordb = this.onChangePasswordb.bind(this);\r\n        this.onChangeBornDate = this.onChangeBornDate.bind(this);\r\n\r\n        this.getUsers = this.getUsers.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.validateCpf = this.validateCpf.bind(this);\r\n        this.capitalize = this.capitalize.bind(this);\r\n        this.showAlert = this.showAlert.bind(this);\r\n\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            passwordb: '',\r\n            career: '',\r\n            cpf: '',\r\n            pet: '',\r\n            born_date: '',\r\n            alertType: 'alert-warning',\r\n            isAlertHide: 'hidden',\r\n            warningMessage: 'teste',\r\n        }\r\n\r\n        //get users data onetime\r\n        this.getUsers();\r\n    }\r\n    \r\n    getUsers() {\r\n        api.post('api/v1/getuser', {} ,{ headers: { \r\n            \"content-type\": \"application/json\",\r\n            Authorization: \"Bearer\" + localStorage.getItem('token')\r\n        } })\r\n        .then( (response) => {\r\n            this.setState({\r\n                name: response.data.currentUser.name,\r\n                id: response.data.currentUser.id,\r\n                email: response.data.currentUser.email,\r\n                career: response.data.currentUser.career,\r\n                cpf: response.data.currentUser.cpf,\r\n                pet: response.data.currentUser.pet,\r\n                born_date: response.data.currentUser.born_date,\r\n            });\r\n            \r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    onChangeName(e) {\r\n        e.target.value = this.capitalize(e.target.value);\r\n        this.setState({ name: e.target.value });\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({ email: e.target.value });\r\n    }\r\n\r\n    onChangeCareer(e) {\r\n        e.target.value = this.capitalize(e.target.value);\r\n        this.setState({ career: e.target.value });\r\n    }\r\n\r\n    onChangeCpf(e) {\r\n        e.target.value = this.validateCpf(e.target.value);\r\n        this.setState({ cpf: e.target.value });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({ password: e.target.value });\r\n    }\r\n\r\n    onChangePasswordb(e) {\r\n        this.setState({ passwordb: e.target.value });\r\n    }\r\n\r\n    onChangePet(e) {\r\n        e.target.value = this.capitalize(e.target.value);\r\n        this.setState({ pet: e.target.value })\r\n    }\r\n\r\n    onChangeBornDate(e) {\r\n        this.setState({ born_date: e.target.value });\r\n    }\r\n\r\n    showAlert(msg, type){\r\n        this.setState({ isAlertHide: 'show', warningMessage: msg, alertType: type });\r\n    }\r\n\r\n    validateCpf(v){\r\n        v=v.replace(/\\D/g,\"\")                    \r\n        v=v.replace(/(\\d{3})(\\d)/,\"$1.$2\")       \r\n        v=v.replace(/(\\d{3})(\\d)/,\"$1.$2\")        \r\n        v=v.replace(/(\\d{3})(\\d{1,2})$/,\"$1-$2\") \r\n        return v\r\n    }\r\n\r\n    capitalize(str) {\r\n        return str.replace(/\\w\\S*/g, function(txt){\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n    handleUpdate(e) {\r\n        e.preventDefault();\r\n        \r\n        const data = {\r\n            id: this.state.id,\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            passwordb: this.state.passwordb,\r\n            career: this.state.career,\r\n            cpf: this.state.cpf,\r\n            pet: this.state.pet,\r\n            born_date: this.state.born_date,\r\n        };\r\n        \r\n        try {\r\n            api.put('api/v1/update', data,\r\n            { headers: { \r\n                \"content-type\": \"application/json\",\r\n                Authorization: \"Bearer\" + localStorage.getItem('token')\r\n            } }).then(async (res) => {\r\n                if(res.data){\r\n                    this.showAlert(\"O usuário foi atualizado\", \"alert-success\");\r\n                    setTimeout(function(){ \r\n                        this.props.history.push('/');\r\n                    }.bind(this), 3000);\r\n                }\r\n            }).catch(function (error) {\r\n                if(error !== undefined){\r\n                    if (error.response.status === 400) {\r\n                        let temp;\r\n                        if(error.response.data !== undefined) {   \r\n                            temp = Object.values(error.response.data);\r\n                            this.showAlert(temp, \"alert-danger\");\r\n                        }\r\n                    }else if (error.response.status === 500) {\r\n                        console.log(error.response.data.error);\r\n                        this.showAlert(error.response.data.error, \"alert-danger\");\r\n                    }\r\n                }\r\n            }.bind(this));\r\n        } catch(error) {\r\n            this.showAlert(error, \"alert-danger\");\r\n        }\r\n    }\r\n\r\n    handleDelete(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            api.post('api/v1/destroy', {},\r\n            { headers: { \r\n                \"content-type\": \"application/json\",\r\n                Authorization: \"Bearer\" + localStorage.getItem('token')\r\n            } }).then(async (res) => {\r\n                this.showAlert(\"O usuário foi excluído\", \"alert-success\");\r\n                setTimeout(function(){ \r\n                    localStorage.clear();\r\n                    this.props.history.push('/');\r\n                }.bind(this), 3000);\r\n            });\r\n        } catch(error) {\r\n            this.showAlert(error, 'alert-danger');\r\n        }\r\n    }\r\n\r\n    render (){\r\n        return (\r\n            <React.Fragment>\r\n            <Header />\r\n                <div className=\"all\">\r\n                    <div className='login-form col-10 offset-1 col-md-4 offset-md-4'>\r\n                    <div className=\"col-12 rm-pd col-md-12 text-center mb-4\">\r\n                        <h2 className=\"cad-title text-center mb-2\">ATUALIZAR DADOS</h2>\r\n                        <label className=\"text-white small float-left mb-3\">Campos com * são obrigatórios</label>\r\n                            <form onSubmit={this.handleUpdate}>\r\n                                <input className=\"col-12\" \r\n                                    type=\"text\" \r\n                                    placeholder=\"Seu nome *\" \r\n                                    value={this.state.name} \r\n                                    onChange={ this.onChangeName } />\r\n\r\n                                <input className=\"col-12\" \r\n                                    type=\"email\" \r\n                                    placeholder=\"Seu melhor email*\" \r\n                                    value={this.state.email}\r\n                                    onChange={this.onChangeEmail} />\r\n                                <input className=\"col-12\" \r\n                                    type=\"password\" \r\n                                    placeholder=\"Digite sua senha*\" \r\n                                    value={this.state.password} \r\n                                    onChange={ this.onChangePassword }/>\r\n\r\n                                <input className=\"col-12\" \r\n                                    type=\"password\" \r\n                                    placeholder=\"Digite a senha novamente*\" \r\n                                    value={this.state.passwordb } \r\n                                    onChange={ this.onChangePasswordb }/>\r\n\r\n                                <input className=\"col-12\" \r\n                                    type=\"text\" \r\n                                    placeholder=\"Sua profissão*\" \r\n                                    value={this.state.career} \r\n                                    onChange={ this.onChangeCareer } />\r\n\r\n                                <input className=\"col-12\" \r\n                                    type=\"text\" \r\n                                    placeholder=\"Seu CPF*\" \r\n                                    value={this.state.cpf} \r\n                                    onChange={ this.onChangeCpf } />\r\n\r\n                                <input className=\"col-12\" \r\n                                    type=\"text\" \r\n                                    placeholder=\"Qual é o seu animal de estimação?\" \r\n                                    value={this.state.pet} \r\n                                    onChange={ this.onChangePet } />\r\n                                <label className=\"text-white float-left mb-3\">Data de nascimento*</label>\r\n                                <input className=\"col-12\" \r\n                                    type=\"date\"\r\n                                    value={this.state.born_date} \r\n                                    onChange={ this.onChangeBornDate } />\r\n\r\n                                <div className={this.state.isAlertHide}>\r\n                                    <div className={`alert text-center pt-4 font-weight-bold ${this.state.alertType}`}>\r\n                                        <p>{this.state.warningMessage}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <button className=\"btn col-12 btn-primary mb-3 mt-2\" type=\"submit\">\r\n                                    ATUALIZAR\r\n                                </button>\r\n\r\n                                <button className=\"btn col-12 btn-danger\" onClick={this.handleDelete}>\r\n                                    EXCLUIR\r\n                                </button>\r\n                                \r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\Recover\\index.js",["71","72","73"],"import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Header from '../../components/Header';\r\nimport api from '../../services/api';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport './styles.css';\r\n\r\nexport default function Login() {\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [title, setTitle] = React.useState(\"Transitioning...\");\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [link, setLink] = useState('');\r\n    const [cpf, setCpf] = useState('');\r\n    const history = useHistory();\r\n    const [isHide, setIsHide] = useState('hidden');\r\n    const [errorMessage, setWarningMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('alert-danger');\r\n\r\n    async function handleReset(e) {\r\n        //block reload page\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await api.post('api/reset', { email, cpf });\r\n            setLink(\"/reset/\" + response.data.token);\r\n            setIsHide(null);\r\n            showModal();\r\n            setAlertType('alert-success');\r\n            setWarningMessage(\"Link de recuperação gerado\");\r\n        } catch (erro) {\r\n            setIsHide(null);\r\n            setAlertType('alert-danger');\r\n            setWarningMessage(erro.response.data);\r\n        }\r\n    }\r\n\r\n    function validateCpf(v){\r\n        v=v.replace(/\\D/g,\"\")                    \r\n        v=v.replace(/(\\d{3})(\\d)/,\"$1.$2\")       \r\n        v=v.replace(/(\\d{3})(\\d)/,\"$1.$2\")        \r\n        v=v.replace(/(\\d{3})(\\d{1,2})$/,\"$1-$2\") \r\n        return v\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n        setTitle(\"Transitioning...\");\r\n    };\r\n\r\n    const modalLoaded = () => {\r\n        setTitle(\"Modal Ready\");\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <div className=\"all\">\r\n                <div className='login-form col-10 offset-1 col-md-4 offset-md-4'>\r\n                    <section className=\"row \">\r\n                        <form onSubmit={handleReset} className=\"col-12\">\r\n                            <h3 className=\"login-text text-center mb-4\">Recuperação de senha</h3>\r\n                            <input className=\"col-12\" type=\"email\" placeholder=\"Informe seu e-mail\" value={email} onChange={ e => setEmail(e.target.value) } />\r\n                            <input className=\"col-12\" type=\"text\" placeholder=\"Informe seu CPF\" maxLength=\"14\" value={cpf} onChange={ e => setCpf(validateCpf(e.target.value)) } />\r\n                            \r\n                            <div className={isHide}>\r\n                                <div className={`alert text-center pt-4 font-weight-bold ${alertType}`}>\r\n                                    <p>{errorMessage}</p>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"text-center mt-2\">\r\n                                <button className=\"btn btn-primary mb-211\" type=\"submit\">\r\n                                    Recuperar\r\n                                </button>\r\n                            </div>\r\n                            \r\n                        </form>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={isOpen} onHide={hideModal} onEntered={modalLoaded}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Redefinição de senha</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"small\">Link para recuperação</div>\r\n                    \r\n                    <Link target=\"_blank\" className=\"default-link\" to={link}>\r\n                        Clique aqui\r\n                    </Link>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className=\"btn btn-primary\" onClick={hideModal}>Fechar</button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </React.Fragment>\r\n    );\r\n}","C:\\Users\\jaffe\\Workspace\\Exercícios\\laravel\\qiora\\frontend\\src\\view\\Recover\\newPassword.js",["74","75"],"import React, { useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport Header from '../../components/Header';\r\nimport api from '../../services/api';\r\nimport './styles.css';\r\n\r\nexport default function NewPassword() {\r\n    const [password, setPassword] = useState('');\r\n    const [passwordb, setPasswordb] = useState('');\r\n    const [isHide, setIsHide] = useState('hidden');\r\n    const [errorMessage, setWarningMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('alert-danger');\r\n\r\n\r\n    const history = useHistory();\r\n    const {token} = useParams();\r\n\r\n    async function handleReset(e) {\r\n        //block reload page\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await api.post('api/renew', { password, passwordb, token });\r\n            setIsHide(null);\r\n            setAlertType('alert-success');\r\n            setWarningMessage(response.data[1]);\r\n        } catch (erro) {\r\n            setIsHide(null);\r\n            setAlertType('alert-danger');\r\n            setWarningMessage(erro.response.data[1]);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <div className=\"all\">\r\n                <div className='login-form col-10 offset-1 col-md-4 offset-md-4'>\r\n                    <section className=\"row \">\r\n                        <form onSubmit={handleReset} className=\"col-12\">\r\n                            <h3 className=\"login-text text-center mb-4\">Escolha uma nova senha</h3>\r\n                            <input className=\"col-12\" \r\n                                    type=\"password\" \r\n                                    placeholder=\"Digite sua senha*\" \r\n                                    value={password} \r\n                                    onChange={ e => setPassword(e.target.value) }/>\r\n\r\n                                <input className=\"col-12\" \r\n                                    type=\"password\" \r\n                                    placeholder=\"Digite a senha novamente*\" \r\n                                    value={passwordb} \r\n                                    onChange={ e => setPasswordb(e.target.value) }/>\r\n                            <div className=\"text-center mt-2\">\r\n\r\n                                <div className={isHide}>\r\n                                    <div className={`alert text-center pt-4 font-weight-bold ${alertType}`}>\r\n                                        <p>{errorMessage}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn btn-primary mb-211\" type=\"submit\">\r\n                                    Recuperar\r\n                                </button>\r\n                            </div>\r\n                            \r\n                        </form>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},{"ruleId":"78","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":14,"column":11,"nodeType":"84","messageId":"85","endLine":14,"endColumn":18},{"ruleId":"82","severity":1,"message":"86","line":98,"column":58,"nodeType":"84","messageId":"85","endLine":98,"endColumn":70},{"ruleId":"82","severity":1,"message":"87","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":20},{"ruleId":"82","severity":1,"message":"88","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":14},{"ruleId":"82","severity":1,"message":"89","line":11,"column":12,"nodeType":"84","messageId":"85","endLine":11,"endColumn":17},{"ruleId":"82","severity":1,"message":"83","line":16,"column":11,"nodeType":"84","messageId":"85","endLine":16,"endColumn":18},{"ruleId":"82","severity":1,"message":"90","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":15,"column":11,"nodeType":"84","messageId":"85","endLine":15,"endColumn":18},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],["91"],["92"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'generalError' is assigned a value but never used.","'useHistory' is defined but never used.","'Button' is defined but never used.","'title' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]